{
  "_args": [
    [
      {
        "raw": "shopify-api-node@^2.7.0",
        "scope": null,
        "escapedName": "shopify-api-node",
        "name": "shopify-api-node",
        "rawSpec": "^2.7.0",
        "spec": ">=2.7.0 <3.0.0",
        "type": "range"
      },
      "/Users/seniorconsultant/Documents/Development/thorin-rc"
    ]
  ],
  "_from": "shopify-api-node@>=2.7.0 <3.0.0",
  "_id": "shopify-api-node@2.14.0",
  "_inCache": true,
  "_location": "/shopify-api-node",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/shopify-api-node_2.14.0_1524926540764_0.8234173839893766"
  },
  "_npmUser": {
    "name": "lpinca",
    "email": "luigipinca@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "shopify-api-node@^2.7.0",
    "scope": null,
    "escapedName": "shopify-api-node",
    "name": "shopify-api-node",
    "rawSpec": "^2.7.0",
    "spec": ">=2.7.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/shopify-api-node/-/shopify-api-node-2.14.0.tgz",
  "_shasum": "40ce21f0ca98fa5deeb692be2f6911662c6ea265",
  "_shrinkwrap": null,
  "_spec": "shopify-api-node@^2.7.0",
  "_where": "/Users/seniorconsultant/Documents/Development/thorin-rc",
  "author": {
    "name": "alexandre saiz",
    "email": "a@alexandresaiz.com"
  },
  "bugs": {
    "url": "https://github.com/MONEI/Shopify-api-node/issues"
  },
  "dependencies": {
    "got": "^8.0.0",
    "lodash": "^4.6.0",
    "qs": "^6.1.0",
    "stopcock": "^1.0.0"
  },
  "description": "Shopify API bindings for Node.js",
  "devDependencies": {
    "chai": "^4.0.0",
    "eslint": "^4.0.0",
    "istanbul": "^0.4.2",
    "mocha": "^5.0.0",
    "nock": "^9.0.0",
    "pre-commit": "^1.1.2"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "integrity": "sha512-dqOkzSlOBzPUIZXcwTzUcvUCgDUykQ9S8Lt+KawepBUYC0Ur3n4nwBw8TfDhc9T0S7Mlv+z/Mh3KIM7YXhvdUQ==",
    "shasum": "40ce21f0ca98fa5deeb692be2f6911662c6ea265",
    "tarball": "https://registry.npmjs.org/shopify-api-node/-/shopify-api-node-2.14.0.tgz",
    "fileCount": 63,
    "unpackedSize": 145998,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa5IhOCRA9TVsSAnZWagAAewUP/0iWHm9OwcNqCGmUjdGQ\n9SYrQCY3hUP6jgNWm7g0qaJ3nHWefe3PPkZBPiU799Fo4vSZYpGfb3yak/5I\n/ENmtQWkhEiiBn7XQuo4d4onEGyIqyvOSLzuXPnVYNil4lJ/XJRQPrInKhhE\nHdyAlt3ewBzmTY++TkXTfCdg5JL/BK6iqLGFBuSF+VkPRDTeBw4i1MtPZCGL\nxSamRcs+pvcCFhawiU/2qPCkEwwWf0+BXpxltahRMFm65cftBhFGHCu1p1jO\nO3BkK9EC0A2+NYyyEVVz9VnciFU9Hc5ZUNflb2rRUuIcKdOOwUMshQCojbZA\nG8c0dGN27uNZYDM16UhCPt6nPKKE6PF16FpZI4c3jebUyfL3foEesXXFZB2j\ni9WqGnUe/T44Uw0r5GDE3KGdl8oR2kLSCySYflLXku244FVk8GHxr9JP2NwC\nxHj4p4m/rK9gYyYzzoFMibi2Dz1BdHJKINpt5W1AnMWHYRhbYmM8k0exK3xd\nkv9pOGRupFau0saTnZRV2W47iX8/q2QUR43bieBCHBw2uPXUyMFqNHIug3cb\nOa8Et6tyYrh65ZRns6UCa7hmHlzTPg/MReDP5zdkO7C05FZNIR2vWDKebQWJ\nKH16C1S+E3P3NtkAJNhxHTetiSMQ2eP9636v7QjtHf+vSJIOZBX6IIw27txo\ns/Lh\r\n=pWY6\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "files": [
    "resources",
    "mixins",
    "index.js",
    "index.d.ts"
  ],
  "gitHead": "fe11ba97fc962cb5d4705d10663efaddfaae3052",
  "homepage": "https://github.com/MONEI/Shopify-api-node",
  "keywords": [
    "Shopify",
    "API",
    "Client"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "alexandresaiz",
      "email": "a@alexandresaiz.com"
    },
    {
      "name": "lpinca",
      "email": "luigipinca@gmail.com"
    }
  ],
  "name": "shopify-api-node",
  "optionalDependencies": {},
  "pre-commit": [
    "lint",
    "test"
  ],
  "readme": "# Shopify API Node.js (Official module)\n\n[![Version npm][npm-shopify-api-node-badge]][npm-shopify-api-node]\n[![Build Status][travis-shopify-api-node-badge]][travis-shopify-api-node]\n[![Dependencies][david-shopify-api-node-badge]][david-shopify-api-node]\n[![Coverage Status][coverage-shopify-api-node-badge]][coverage-shopify-api-node]\n\nOfficial Shopify API bindings for Node.js.\n\n## Installation:\n\n```shell\n$ npm install --save shopify-api-node\n```\n\n## API\n\nThis module exports a constructor function which takes an options object.\n\n### `Shopify(options)`\n\nCreates a new `Shopify` instance.\n\n#### Arguments\n\n- `options` - Required - A plain JavaScript object that contains the\nconfiguration options.\n\n#### Options\n\n- `shopName` - Required - A string that specifies the shop name.\n- `apiKey` - Required for [private][generate-private-app-credentials] apps - A\n  string that specifies the API key of the app. This option must be used in\n  conjunction with the `password` option and is mutually exclusive with the\n  `accessToken` option.\n- `password` - Required for [private][generate-private-app-credentials] apps -\n  A string that specifies the private app password. This option must be used in\n  conjunction with the `apiKey` option and is mutually exclusive with the\n  `accessToken` option.\n- `accessToken` - Required for public apps - A string representing the\n  permanent [OAuth 2.0][oauth] access token. This option is mutually exclusive\n  with the `apiKey` and `password` options. If you are looking for a premade\n  solution to obtain an access token, take a look at the [shopify-token][]\n  module.\n- `autoLimit` - Optional - This option allows you to regulate the request rate\n  in order to avoid hitting the [rate limit][api-call-limit]. Requests are\n  limited using the token bucket algorithm. Accepted values are a boolean or a\n  plain JavaScript object. When using an object, the `calls` property and the\n  `interval` property specify the refill rate and the `bucketSize` property\n  the bucket size. For example `{ calls: 2, interval: 1000, bucketSize: 35 }`\n  specifies a limit of 2 requests per second with a burst of 35 requests. When\n  set to `true` requests are limited as specified in the above example.\n  Defaults to `false`.\n- `timeout` - Optional - The number of milliseconds before the request times\n  out. If the request takes longer than `timeout`, it will be aborted. Defaults\n  to `60000`, or 1 minute.\n\n#### Return value\n\nA `Shopify` instance.\n\n#### Exceptions\n\nThrows an `Error` exception if the required options are missing.\n\n#### Example\n\n```js\nconst Shopify = require('shopify-api-node');\n\nconst shopify = new Shopify({\n  shopName: 'your-shop-name',\n  apiKey: 'your-api-key',\n  password: 'your-app-password'\n});\n```\n\n### `shopify.callLimits`\n\nThe `callLimits` property allows you to monitor the API call limit. The value\nis an object like this:\n\n```js\n{\n  remaining: 30,\n  current: 10,\n  max: 40\n}\n```\n\nValues start at `undefined` and are updated every time a request is made. After\nevery update the `callLimits` event is emitted with the updated limits as\nargument.\n\n```js\nshopify.on('callLimits', limits => console.log(limits));\n```\n\n### Resources\n\nEvery resource is accessed via your `shopify` instance:\n\n```js\nconst shopify = new Shopify({\n  shopName: 'your-shop-name',\n  accessToken: 'your-oauth-token'\n});\n\n// shopify.<resource_name>.<method_name>\n```\n\nEach method returns a `Promise` that resolves with the result:\n\n```js\nshopify.order.list({ limit: 5 })\n  .then(orders => console.log(orders))\n  .catch(err => console.error(err));\n```\n\n#### Metafields\n\nShopify allows for adding metafields to various resources. You can use the\n`owner_resource` and `owner_id` properties to work with metafields that belong\nto a particular resource as shown in the examples below.\n\nGet metafields that belong to a product:\n\n```js\nshopify.metafield.list({\n  metafield: { owner_resource: 'product', owner_id: 632910392 }\n}).then(\n  metafields => console.log(metafields),\n  err => console.error(err)\n);\n```\n\nCreate a new metafield for a product:\n\n```js\nshopify.metafield.create({\n  key: 'warehouse',\n  value: 25,\n  value_type: 'integer',\n  namespace: 'inventory',\n  owner_resource: 'product',\n  owner_id: 632910392\n}).then(\n  metafield => console.log(metafield),\n  err => console.error(err)\n);\n```\n\n### Available resources and methods\n\n- accessScope\n  - `list()`\n- apiPermission\n  - `delete()`\n- applicationCharge\n  - `activate(id[, params])`\n  - `create(params)`\n  - `get(id[, params])`\n  - `list([params])`\n- applicationCredit\n  - `create(params)`\n  - `get(id[, params])`\n  - `list([params])`\n- article\n  - `authors()`\n  - `count(blogId[, params])`\n  - `create(blogId, params)`\n  - `delete(blogId, id)`\n  - `get(blogId, id[, params])`\n  - `list(blogId[, params])`\n  - `tags([blogId][, params])`\n  - `update(blogId, id, params)`\n- asset\n  - `create(themeId, params)`\n  - `delete(themeId, params)`\n  - `get(themeId, params)`\n  - `list(themeId[, params])`\n  - `update(themeId, params)`\n- blog\n  - `count()`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `update(id, params)`\n- carrierService\n  - `create(params)`\n  - `delete(id)`\n  - `get(id)`\n  - `list()`\n  - `update(id, params)`\n- checkout\n  - `complete(token)`\n  - `count([params])`\n  - `create(params)`\n  - `get(token)`\n  - `list([params])`\n  - `shippingRates(token)`\n  - `update(token, params)`\n- collect\n  - `count([params])`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n- collectionListing\n  - `get(id)`\n  - `list([params])`\n  - `productIds(id)`\n- comment\n  - `approve(id)`\n  - `count([params])`\n  - `create(params)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `notSpam(id)`\n  - `remove(id)`\n  - `restore(id)`\n  - `spam(id)`\n  - `update(id, params)`\n- country\n  - `count()`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `update(id, params)`\n- customCollection\n  - `count([params])`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `update(id, params)`\n- customer\n  - `accountActivationUrl(id)`\n  - `count()`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `orders(id)`\n  - `search(params)`\n  - `sendInvite(id[, params])`\n  - `update(id, params)`\n- customerAddress\n  - `create(customerId, params)`\n  - `default(customerId, id)`\n  - `delete(customerId, id)`\n  - `get(customerId, id)`\n  - `list(customerId[, params])`\n  - `set(customerId, params)`\n  - `update(customerId, id, params)`\n- customerSavedSearch\n  - `count([params])`\n  - `create(params)`\n  - `customers(id[, params])`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `update(id, params)`\n- discountCode\n  - `create(priceRuleId, params)`\n  - `delete(priceRuleId, id)`\n  - `get(priceRuleId, id)`\n  - `list(priceRuleId)`\n  - `lookup(params)`\n  - `update(priceRuleId, id, params)`\n- draftOrder\n  - `complete(id[, params])`\n  - `count()`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `sendInvoice(id[, params])`\n  - `update(id, params)`\n- event\n  - `count([params])`\n  - `get(id[, params])`\n  - `list([params])`\n- fulfillment\n  - `cancel(orderId, id)`\n  - `complete(orderId, id)`\n  - `count(orderId[, params)`\n  - `create(orderId, params)`\n  - `get(orderId, id[, params])`\n  - `list(orderId[, params])`\n  - `open(orderId, id)`\n  - `update(orderId, id, params)`\n- fulfillmentEvent\n  - `create(orderId, fulfillmentId, params)`\n  - `delete(orderId, fulfillmentId, id)`\n  - `get(orderId, fulfillmentId, id)`\n  - `list(orderId, fulfillmentId[, params])`\n  - `update(orderId, fulfillmentId, id, params)`\n- fulfillmentService\n  - `create(params)`\n  - `delete(id)`\n  - `get(id)`\n  - `list([params])`\n  - `update(id, params)`\n- giftCard\n  - `count([params])`\n  - `create(params)`\n  - `disable(id)`\n  - `get(id)`\n  - `list([params])`\n  - `search(params)`\n  - `update(id, params)`\n- inventoryItem\n  - `get(id)`\n  - `list(params)`\n  - `update(id, params)`\n- inventoryLevel\n  - `adjust(params)`\n  - `connect(params)`\n  - `delete(params)`\n  - `list(params)`\n  - `set(params)`\n- location\n  - `get(id)`\n  - `list()`\n- marketingEvent\n  - `count()`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id)`\n  - `list([params])`\n  - `update(id, params)`\n  - `engagements(id, params)`\n- metafield\n  - `count([params])`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `update(id, params)`\n- order\n  - `cancel(id[, params])`\n  - `close(id)`\n  - `count([params])`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `open(id)`\n  - `update(id, params)`\n- orderRisk\n  - `create(orderId, params)`\n  - `delete(orderId, id)`\n  - `get(orderId, id)`\n  - `list(orderId)`\n  - `update(orderId, id, params)`\n- page\n  - `count([params])`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `update(id, params)`\n- payment\n  - `count(checkoutToken)`\n  - `create(checkoutToken, params)`\n  - `get(checkoutToken, id)`\n  - `list(checkoutToken)`\n- policy\n  - `list([params])`\n- priceRule\n  - `create(params)`\n  - `delete(id)`\n  - `get(id)`\n  - `list([params])`\n  - `update(id, params)`\n- product\n  - `count([params])`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `update(id, params)`\n- productImage\n  - `count(productId[, params])`\n  - `create(productId, params)`\n  - `delete(productId, id)`\n  - `get(productId, id[, params])`\n  - `list(productId[, params])`\n  - `update(productId, id, params)`\n- productListing\n  - `count()`\n  - `create(productId[, params])`\n  - `delete(productId)`\n  - `get(productId)`\n  - `list([params])`\n  - `productIds([params])`\n- productVariant\n  - `count(productId)`\n  - `create(productId, params)`\n  - `delete(productId, id)`\n  - `get(id[, params])`\n  - `list(productId[, params])`\n  - `update(id, params)`\n- province\n  - `count(countryId[, params])`\n  - `get(countryId, id[, params])`\n  - `list(countryId[, params])`\n  - `update(countryId, id, params)`\n- recurringApplicationCharge\n  - `activate(id, params)`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n- redirect\n  - `count([params])`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `update(id, params)`\n- refund\n  - `calculate(orderId, params)`\n  - `create(orderId, params)`\n  - `get(orderId, id[, params])`\n  - `list(orderId[, params])`\n- report\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `update(id, params)`\n- resourceFeedback\n  - `create(params)`\n  - `list()`\n- scriptTag\n  - `count([params])`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `update(id, params)`\n- shippingZone\n  - `list([params])`\n- shop\n  - `get([params])`\n- smartCollection\n  - `count([params])`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `order(id, params)`\n  - `update(id, params)`\n- storefrontAccessToken\n  - `create(params)`\n  - `delete(id)`\n  - `list()`\n- theme\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `update(id, params)`\n- transaction\n  - `count(orderId)`\n  - `create(orderId, params)`\n  - `get(orderId, id[, params])`\n  - `list(orderId[, params])`\n- usageCharge\n  - `create(recurringApplicationChargeId, params)`\n  - `get(recurringApplicationChargeId, id[, params])`\n  - `list(recurringApplicationChargeId[, params])`\n- user\n  - `current()`\n  - `get(id)`\n  - `list()`\n- webhook\n  - `count([params])`\n  - `create(params)`\n  - `delete(id)`\n  - `get(id[, params])`\n  - `list([params])`\n  - `update(id, params)`\n\nwhere `params` is a plain JavaScript object. See https://help.shopify.com/api/reference?ref=microapps\nfor parameters details.\n\n## Become a master of the Shopify ecosystem by:\n\n* [Becoming a Shopify App Developer][becoming-a-shopify-app-developer]\n* [Checking out the roots][checking-out-the-roots]\n* [Talking To Other Masters][talking-to-other-masters]\n* [Reading API Docs][reading-api-docs]\n* [Learning from others][learning-from-others]\n\n## Use Polaris, a React powered Frontend Framework which mimics the Shopify merchant admin:\n\n[Polaris][polaris]\n\n## Shopify Apps already using Shopify API node:\n\n(add yours!)\n\n* [Sample Node Express app by Shopify][sample-node-express-app-by-shopify]\n* [Wholesaler][wholesaler]\n* [Wholesaler & Customer Pricing][wholesaler-customer-pricing]\n* [Wholesaler PRO][wholesaler-pro]\n* [Youtube Traffic][youtube-traffic]\n\n## Supported by:\n\n[microapps][microapps]\n\nUsed in our live products: [MoonMail][moonmail] & [MONEI][monei]\n\n## License\n\n[MIT](LICENSE)\n\n[sample-node-express-app-by-shopify]: https://github.com/Shopify/shopify-node-app\n[npm-shopify-api-node-badge]: https://img.shields.io/npm/v/shopify-api-node.svg\n[npm-shopify-api-node]: https://www.npmjs.com/package/shopify-api-node\n[travis-shopify-api-node-badge]: https://img.shields.io/travis/MONEI/Shopify-api-node/master.svg\n[travis-shopify-api-node]: https://travis-ci.org/MONEI/Shopify-api-node\n[david-shopify-api-node-badge]: https://img.shields.io/david/MONEI/Shopify-api-node.svg\n[david-shopify-api-node]: https://david-dm.org/MONEI/Shopify-api-node\n[coverage-shopify-api-node-badge]: https://img.shields.io/coveralls/MONEI/Shopify-api-node/master.svg\n[coverage-shopify-api-node]: https://coveralls.io/github/MONEI/Shopify-api-node\n[generate-private-app-credentials]: https://help.shopify.com/api/guides/api-credentials#generate-private-app-credentials?ref=microapps\n[oauth]: https://help.shopify.com/api/guides/authentication/oauth?ref=microapps\n[shopify-token]: https://github.com/lpinca/shopify-token\n[api-call-limit]: https://help.shopify.com/api/guides/api-call-limit/?ref=microapps\n[becoming-a-shopify-app-developer]: https://app.shopify.com/services/partners/signup?ref=microapps\n[checking-out-the-roots]: https://help.shopify.com/api/guides?ref=microapps\n[talking-to-other-masters]: https://ecommerce.shopify.com/c/shopify-apps?ref=microapps\n[reading-api-docs]: https://help.shopify.com/api/reference/?ref=microapps\n[learning-from-others]: https://stackoverflow.com/questions/tagged/shopify\n[polaris]: https://polaris.shopify.com/?ref=microapps\n[microapps]: http://microapps.com/?utm_source=shopify-api-node-module-repo-readme&utm_medium=click&utm_campaign=github\n[moonmail]: https://moonmail.io/?utm_source=shopify-api-node-module-repo-readme&utm_medium=click&utm_campaign=github\n[monei]: https://monei.net/?utm_source=shopify-api-node-module-repo-readme&utm_medium=click&utm_campaign=github\n[wholesaler]: https://apps.shopify.com/wholesaler?ref=microapps\n[wholesaler-customer-pricing]: https://apps.shopify.com/wholesaler-pro-1?ref=microapps\n[wholesaler-pro]: https://apps.shopify.com/wholesaler-pro-2?ref=microapps\n[youtube-traffic]: https://apps.shopify.com/youtube-traffic?ref=microapps\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MONEI/Shopify-api-node.git"
  },
  "scripts": {
    "coverage": "istanbul cover _mocha",
    "lint": "eslint .",
    "test": "mocha",
    "test-travis": "npm run lint && istanbul cover _mocha --report lcovonly",
    "watch": "mocha -w"
  },
  "version": "2.14.0"
}
