{
  "_args": [
    [
      {
        "raw": "babel-plugin-lodash@^3.2.11",
        "scope": null,
        "escapedName": "babel-plugin-lodash",
        "name": "babel-plugin-lodash",
        "rawSpec": "^3.2.11",
        "spec": ">=3.2.11 <4.0.0",
        "type": "range"
      },
      "/Users/seniorconsultant/Documents/Development/thorin-rc"
    ]
  ],
  "_from": "babel-plugin-lodash@>=3.2.11 <4.0.0",
  "_id": "babel-plugin-lodash@3.3.2",
  "_inCache": true,
  "_location": "/babel-plugin-lodash",
  "_nodeVersion": "9.1.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/babel-plugin-lodash-3.3.2.tgz_1510516752491_0.940534422872588"
  },
  "_npmUser": {
    "name": "jdalton",
    "email": "john.david.dalton@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {
    "fs.realpath": "1.0.0",
    "inflight": "1.0.6",
    "inherits": "2.0.3",
    "minimatch": "3.0.4",
    "once": "1.4.0",
    "path-is-absolute": "1.0.1"
  },
  "_requested": {
    "raw": "babel-plugin-lodash@^3.2.11",
    "scope": null,
    "escapedName": "babel-plugin-lodash",
    "name": "babel-plugin-lodash",
    "rawSpec": "^3.2.11",
    "spec": ">=3.2.11 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/babel-plugin-lodash/-/babel-plugin-lodash-3.3.2.tgz",
  "_shasum": "da3a5b49ba27447f54463f6c4fa81396ccdd463f",
  "_shrinkwrap": null,
  "_spec": "babel-plugin-lodash@^3.2.11",
  "_where": "/Users/seniorconsultant/Documents/Development/thorin-rc",
  "author": {
    "name": "Graeme Yeates",
    "email": "megawac@gmail.com",
    "url": "https://github.com/megawac"
  },
  "bugs": {
    "url": "https://github.com/lodash/babel-plugin-lodash/issues"
  },
  "contributors": [
    {
      "name": "Graeme Yeates",
      "email": "megawac@gmail.com",
      "url": "https://github.com/megawac"
    },
    {
      "name": "John-David Dalton",
      "email": "john.david.dalton@gmail.com",
      "url": "http://allyoucanleet.com/"
    }
  ],
  "dependencies": {
    "babel-helper-module-imports": "^7.0.0-beta.3",
    "babel-types": "^6.26.0",
    "glob": "^7.1.1",
    "lodash": "^4.17.4",
    "require-package-name": "^2.0.1"
  },
  "description": "Modular Lodash builds without the hassle.",
  "devDependencies": {
    "@storybook/addon-links": "^3.2.0",
    "async": "^2.6.0",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-plugin-add-module-exports": "~0.2.1",
    "babel-plugin-lodash": "3.3.0",
    "babel-plugin-syntax-flow": "^6.18.0",
    "babel-plugin-syntax-jsx": "^6.18.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-plugin-transform-runtime": "^6.15.0",
    "babel-preset-env": "^1.6.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-0": "^6.24.1",
    "babel-register": "^6.26.0",
    "chai": "^4.1.2",
    "lodash-bound": "^1.1.2",
    "lodash-compat": "^3.10.2",
    "lodash-es": "^4.17.4",
    "mocha": "^4.0.1",
    "ramda": "^0.25.0",
    "react-bootstrap": "^0.31.5"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-lNsptTRfc0FTdW56O087EiKEADVEjJo2frDQ97olMjCKbRZfZPu7MvdyxnZLOoDpuTCtavN8/4Zk65x4gT+C3Q==",
    "shasum": "da3a5b49ba27447f54463f6c4fa81396ccdd463f",
    "tarball": "https://registry.npmjs.org/babel-plugin-lodash/-/babel-plugin-lodash-3.3.2.tgz"
  },
  "files": [
    "lib"
  ],
  "greenkeeper": {
    "ignore": [
      "babel-plugin-lodash"
    ]
  },
  "homepage": "https://github.com/lodash/babel-plugin-lodash#readme",
  "keywords": [
    "babel-plugin",
    "cherry-pick",
    "lodash",
    "modules"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "jdalton",
      "email": "john.david.dalton@gmail.com"
    },
    {
      "name": "mathias",
      "email": "mathias@qiwi.be"
    }
  ],
  "name": "babel-plugin-lodash",
  "optionalDependencies": {},
  "readme": "# babel-plugin-lodash\n\nA simple transform to cherry-pick Lodash modules so you don’t have to.\n\nCombine with [lodash-webpack-plugin](https://www.npmjs.com/package/lodash-webpack-plugin)\nfor even smaller cherry-picked builds!\n\n## Install\n\n```shell\n$ npm i --save lodash\n$ npm i --save-dev babel-plugin-lodash babel-cli babel-preset-env\n```\n\n## Example\n\nTransforms\n```js\nimport _ from 'lodash'\nimport { add } from 'lodash/fp'\n\nconst addOne = add(1)\n_.map([1, 2, 3], addOne)\n```\n\nroughly to\n```js\nimport _add from 'lodash/fp/add'\nimport _map from 'lodash/map'\n\nconst addOne = _add(1)\n_map([1, 2, 3], addOne)\n```\n\n## Usage\n\n###### .babelrc\n```json\n{\n  \"plugins\": [\"lodash\"],\n  \"presets\": [\"es2015\"]\n}\n```\n\nSet plugin options using an array of `[pluginName, optionsObject]`.\n```json\n{\n  \"plugins\": [[\"lodash\", { \"id\": \"lodash-compat\", \"cwd\": \"some/path\" }]],\n  \"presets\": [[\"env\", { \"targets\": { \"node\": 4 } }]]\n}\n```\n\nThe `options.id` can be an array of ids.\n```json\n{\n  \"plugins\": [[\"lodash\", { \"id\": [\"async\", \"lodash-bound\"] }]],\n  \"presets\": [[\"env\", { \"targets\": { \"node\": 4 } }]]\n}\n```\n\n###### Babel CLI\n```sh\n$ babel --plugins lodash --presets es2015 script.js\n```\n\n###### Babel API\n```js\nrequire('babel-core').transform('code', {\n  'plugins': ['lodash'],\n  'presets': [['env', { 'targets': { 'node': 4 } }]]\n})\n```\n\n###### webpack.config.js\n```js\n'module': {\n  'loaders': [{\n    'loader': 'babel-loader',\n    'test': /\\.js$/,\n    'exclude': /node_modules/,\n    'query': {\n      'plugins': ['lodash'],\n      'presets': [['env', { 'targets': { 'node': 4 } }]]\n    }\n  }]\n}\n```\n\n## FAQ\n\n> Can this plugin produce ES2015 imports rather than CommonJS imports?\n\nThis plugin produces ES2015 imports by default. The\n[transform-es2015-modules-commonjs](https://www.npmjs.com/package/babel-plugin-transform-es2015-modules-commonjs)\nplugin, which is included in the Babel [es2015](http://babeljs.io/docs/plugins/preset-es2015/)\npreset, transforms ES2015 `import` statements to CommonJS. Omit it from your\npreset to preserve ES2015 style imports.\n\n## Limitations\n\n* You must use ES2015 imports to load Lodash\n* Babel < 6 & Node.js < 4 aren’t supported\n* Chain sequences aren’t supported. See [this blog post](https://medium.com/making-internets/why-using-chain-is-a-mistake-9bc1f80d51ba) for alternatives.\n* Modularized [method packages](https://www.npmjs.com/browse/keyword/lodash-modularized) aren’t supported\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lodash/babel-plugin-lodash.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib || true",
    "prepublish": "npm run build",
    "test": "mocha --check-leaks --compilers js:babel-register"
  },
  "version": "3.3.2"
}
