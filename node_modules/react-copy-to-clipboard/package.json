{
  "_args": [
    [
      {
        "raw": "react-copy-to-clipboard@^5.0.0",
        "scope": null,
        "escapedName": "react-copy-to-clipboard",
        "name": "react-copy-to-clipboard",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "/Users/seniorconsultant/Documents/Development/thorin-rc"
    ]
  ],
  "_from": "react-copy-to-clipboard@>=5.0.0 <6.0.0",
  "_id": "react-copy-to-clipboard@5.0.1",
  "_inCache": true,
  "_location": "/react-copy-to-clipboard",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-copy-to-clipboard-5.0.1.tgz_1506772904081_0.12827012944035232"
  },
  "_npmUser": {
    "name": "nkbt",
    "email": "nik@butenko.me"
  },
  "_npmVersion": "5.4.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-copy-to-clipboard@^5.0.0",
    "scope": null,
    "escapedName": "react-copy-to-clipboard",
    "name": "react-copy-to-clipboard",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-copy-to-clipboard/-/react-copy-to-clipboard-5.0.1.tgz",
  "_shasum": "8eae107bb400be73132ed3b6a7b4fb156090208e",
  "_shrinkwrap": null,
  "_spec": "react-copy-to-clipboard@^5.0.0",
  "_where": "/Users/seniorconsultant/Documents/Development/thorin-rc",
  "author": {
    "name": "Nik Butenko",
    "email": "nik@butenko.me"
  },
  "bugs": {
    "url": "https://github.com/nkbt/react-copy-to-clipboard/issues"
  },
  "config": {
    "component": "CopyToClipboard",
    "externals": {
      "react": "React",
      "react-dom": "ReactDOM"
    }
  },
  "dependencies": {
    "copy-to-clipboard": "^3",
    "prop-types": "^15.5.8"
  },
  "description": "Copy-to-clipboard React component",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-eslint": "^8.0.1",
    "babel-loader": "^7.1.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-object-rest-spread": "^6.23.0",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.8",
    "babel-preset-env": "^1.6.0",
    "babel-preset-react": "^6.24.1",
    "babel-register": "^6.24.1",
    "babili-webpack-plugin": "^0.1.2",
    "css-loader": "^0.28.4",
    "eslint": "^4.4.0",
    "eslint-config-airbnb": "^15.1.0",
    "eslint-plugin-babel": "^4.1.2",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-jsx-a11y": "^6.0.2",
    "eslint-plugin-react": "^7.1.0",
    "extract-text-webpack-plugin": "^3.0.0",
    "finalhandler": "^1.0.4",
    "gh-pages": "^1.0.0",
    "glob": "^7.1.2",
    "html-webpack-include-assets-plugin": "^1.0.0",
    "html-webpack-plugin": "^2.30.1",
    "nightwatch": "^0.9.16",
    "portfinder": "^1.0.13",
    "react": "^16.0.0",
    "react-dom": "^16.0.0",
    "rimraf": "^2.6.1",
    "serve-static": "^1.12.3",
    "style-loader": "^0.18.2",
    "tape": "^4.8.0",
    "webpack": "^3.4.1",
    "webpack-dev-server": "^2.6.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-ELKq31/E3zjFs5rDWNCfFL4NvNFQvGRoJdAKReD/rUPA+xxiLPQmZBZBvy2vgH7V0GE9isIQpT9WXbwIVErYdA==",
    "shasum": "8eae107bb400be73132ed3b6a7b4fb156090208e",
    "tarball": "https://registry.npmjs.org/react-copy-to-clipboard/-/react-copy-to-clipboard-5.0.1.tgz"
  },
  "files": [
    "build",
    "lib",
    "src",
    "LICENSE",
    "package.json",
    "README.md"
  ],
  "gitHead": "bfbf468482b37897f5dc78d0731e7287568681df",
  "homepage": "https://github.com/nkbt/react-copy-to-clipboard",
  "keywords": [
    "component",
    "react-component",
    "react",
    "copy to clipboard",
    "clipboard"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "nkbt",
      "email": "nik@butenko.me"
    }
  ],
  "name": "react-copy-to-clipboard",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.3.0 || ^16.0.0"
  },
  "readme": "# react-copy-to-clipboard [![npm](https://img.shields.io/npm/v/react-copy-to-clipboard.svg?style=flat-square)](https://www.npmjs.com/package/react-copy-to-clipboard)\n\n[![Gitter](https://img.shields.io/gitter/room/nkbt/help.svg?style=flat-square)](https://gitter.im/nkbt/help)\n\n[![CircleCI](https://img.shields.io/circleci/project/nkbt/react-copy-to-clipboard.svg?style=flat-square&label=nix-build)](https://circleci.com/gh/nkbt/react-copy-to-clipboard)\n[![Dependencies](https://img.shields.io/david/nkbt/react-copy-to-clipboard.svg?style=flat-square)](https://david-dm.org/nkbt/react-copy-to-clipboard)\n[![Dev Dependencies](https://img.shields.io/david/dev/nkbt/react-copy-to-clipboard.svg?style=flat-square)](https://david-dm.org/nkbt/react-copy-to-clipboard#info=devDependencies)\n\nCopy to clipboard React component\n\nBased on [copy-to-clipboard](https://npm.im/copy-to-clipboard)\n\n> Would try to use execCommand with fallback to IE specific clipboardData interface and finally, fallback to simple prompt with proper text content & 'Copy to clipboard: Ctrl+C, Enter'\n\n\n![Copy to clipboard](example/copy-to-clipboard.gif)\n\n\n## Installation\n\n### NPM\n\n```sh\nnpm install --save react react-copy-to-clipboard\n```\n\nDon't forget to manually install peer dependencies (`react`) if you use npm@3.\n\n\n### 1998 Script Tag:\n```html\n<script src=\"https://unpkg.com/react@16.0.0/umd/react.production.min.js\"></script>\n<script src=\"https://unpkg.com/react-copy-to-clipboard/build/react-copy-to-clipboard.js\"></script>\n(Module exposed as `CopyToClipboard`)\n```\n\n\n## Demo\n\n[http://nkbt.github.io/react-copy-to-clipboard](http://nkbt.github.io/react-copy-to-clipboard)\n\n## Codepen demo\n\n[http://codepen.io/nkbt/pen/eNPoQv](http://codepen.io/nkbt/pen/eNPoQv?editors=0010)\n\n## Usage\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nclass App extends React.Component {\n  state = {\n    value: '',\n    copied: false,\n  };\n\n  render() {\n    return (\n      <div>\n        <input value={this.state.value}\n          onChange={({target: {value}}) => this.setState({value, copied: false})} />\n\n        <CopyToClipboard text={this.state.value}\n          onCopy={() => this.setState({copied: true})}>\n          <span>Copy to clipboard with span</span>\n        </CopyToClipboard>\n\n        <CopyToClipboard text={this.state.value}\n          onCopy={() => this.setState({copied: true})}>\n          <button>Copy to clipboard with button</button>\n        </CopyToClipboard>\n\n        {this.state.copied ? <span style={{color: 'red'}}>Copied.</span> : null}\n      </div>\n    );\n  }\n}\n\nconst appRoot = document.createElement('div');\ndocument.body.appendChild(appRoot);\nReactDOM.render(<App />, appRoot);\n```\n\n## Options\n\n\n#### `text`: PropTypes.string.isRequired\n\nText to be copied to clipboard\n\n\n#### `onCopy`: PropTypes.func\n\nOptional callback, will be called when text is copied\n\n```\nonCopy(text, result)\n```\n`result (bool)`: Returns `true` if copied successfully, else `false`.\n\n\n#### `options`: PropTypes.shape({debug: bool, message: string})\n\nOptional [copy-to-clipboard](https://npm.im/copy-to-clipboard) options.\n\nSee [API docs](https://npm.im/copy-to-clipboard#api) for details\n\n#### `children`: PropTypes.node.isRequired\n\nCopyToClipboard is a simple wrapping component, it does not render any tags, so it requires the only child element to be present, which will be used to capture clicks.\n\n```js\n<CopyToClipboard text=\"Hello!\">\n  <button>Copy to clipboard</button>\n</CopyToClipboard>\n```\n\n## Development and testing\n\nCurrently is being developed and tested with the latest stable `Node 8` on `OSX`.\n\nTo run example covering all `CopyToClipboard` features, use `yarn start`, which will compile `example/Example.js`\n\n```bash\ngit clone git@github.com:nkbt/react-copy-to-clipboard.git\ncd react-copy-to-clipboard\nyarn install\nyarn start\n\n# then\nopen http://localhost:8080\n```\n\n## Tests\n\n```bash\n# to run ESLint check\nyarn lint\n\n# to run tests\nyarn test\n\n# to run end-to-end tests\n# first, run `selenium/standalone-firefox:3.4.0` docker image\ndocker run selenium/standalone-firefox:3.4.0\n# then run test\nyarn e2e\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nkbt/react-copy-to-clipboard.git"
  },
  "scripts": {
    "build": "scripts/build.js",
    "dist": "scripts/dist.js",
    "e2e": "scripts/e2e.js",
    "ghPages": "scripts/ghPages.js",
    "lib": "scripts/lib.js",
    "lint": "scripts/lint.js",
    "postversion": "git push --follow-tags",
    "prepublish": "yarn build",
    "pub": "scripts/pub.js",
    "start": "scripts/dev.js",
    "test": "scripts/test.js"
  },
  "version": "5.0.1"
}
